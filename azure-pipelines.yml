trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - v*

jobs:
- job: Build
  strategy:
    maxParallel: 4
    matrix:
      LinuxWheels:
        imageName: 'ubuntu-latest'
        artifactName: linuxwheels
        # CFLAGS: "-std=c++14"
      MacWheels:
        imageName: 'macOS-10.15'
        artifactName: macwheels
        # CFLAGS: "-std=c++14"
      WinWheels:
        imageName: 'windows-latest'
        artifactName: winwheels
  pool: { vmImage: $(imageName) }
  variables:
    # CIBW_BEFORE_TEST: rm -rf {package}/build {package}/dist
    CIBW_TEST_COMMAND: pytest --pyargs dfit -vv 
    CIBW_TEST_EXTRAS: test
    CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
    CIBW_MANYLINUX_I686_IMAGE: manylinux2010
    CIBW_SKIP: "?p27* pp* cp34-* cp35-*"
    CIBW_BUILD_VERBOSITY: 1
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
      displayName: "Python Setup"
      
    - bash: |
        echo '##[group]Installing Dependencies'
        pip install -e .[test] -v
        echo '##[endgroup]'

        echo '##[group]Build Inplace'
        make
        echo '##[endgroup]'

        echo '##[group]Running Test'
        pytest || exit 1
        echo '##[endgroup]'

        echo '##[group]Cleanup'
        make clean
        pip uninstall dfit
        echo '##[endgroup]'
      displayName: "Initial Build Tests"
      
    - bash: |
        pip install cibuildwheel==1.7.2
        cibuildwheel --output-dir wheelhouse .
      displayName: "Build Wheels"
        
    - task: PublishBuildArtifacts@1
      inputs: 
        pathtoPublish: 'wheelhouse'
        ArtifactName: $(artifactName)
      displayName: "Create Artifacts"
